// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String          @id @default(uuid())
  login_id     String
  login_method LoginMethodType
  email        String          @unique
  name         String
  created_at   DateTime        @default(now())
  Invitations  Invitation[]
}

enum LoginMethodType {
  GOOGLE
}

model Invitation {
  id           String   @id @default(uuid())
  user_id      String
  design       String
  desktop_bg   String
  slug         String   @unique
  index        Int
  is_paid      Boolean  @default(false)
  is_published Boolean  @default(false)
  created_at   DateTime @default(now())
  Modules      Module[]
  User         User     @relation(fields: [user_id], references: [id])

  @@unique([user_id, index]) // âœ… index is unique only within each user
}

model Module {
  id            String @id @default(uuid())
  invitation_id String
  order         Int
  name          String
  url           String
  content       Json

  Invitation Invitation @relation(fields: [invitation_id], references: [id], onDelete: Cascade)

  @@unique([invitation_id, order]) // prevent duplicate order within the same invitation
  @@index([invitation_id])
}
